@startuml
'https://plantuml.com/state-diagram

scale 1000 width

[*] -right-> iact

state "Inactive" as iact
state "Active" as act {

    state cStop <<choice>>

     [*] --> cStop : [isCar]
     cStop --> xs : [cmdStop]
     cStop --> xs : [isExtStop]
     cStop --> ccon : [else]
     [*] --> nocl : [noCar]


    act: entry: WallboxMonitor.subscribeState(this)
    act: exit: WallboxMonitor.unsubscribeState(this)

    state "NoCarConnected" as nocl {
'      nocl: entry: cancelCharging()
    }

    state "ChargingStopped" as xs
        xs: entry: stopCharging()

    state "CarConnected" as ccon {

      state "ChargePvSurplus" as lps {
        lps: entry: PvChargeStrategy.startStrategy(this)
        lps: exit: PvChargeStrategy.stopStrategy(this)

        state "HasSurplus" as has {
            has: entry: setCurrent(v)
            has: entry: startCharging()
            has: on: surplus(v) : setCurrent(v)
            has: exit: stopCharging()
        }

        state "NoSurplus" as nos {
          nos: on: noSurplus : ignore
        }

        state lpstart <<start>>
      }
      nos -down-> has : surplus(v)
      has -up-> nos : noSurplus
      lpstart -right-> nos

      state "ChargeTibber" as lt {
      lt: entry: startTibberMonitor
      lt: exit: stopTibberMonitor
      lt: on: tibberGo : startCharging()
      lt: on: tibberHalt : stopCharging()
      }

      state "ChargeAnyway" as la {
        la: entry: startCharging()
        la: entry: setCurrent(maxCurrent)
        la: exit:stopCharging()
      }

      ccon --> xs : cmdStop
      [*] -down-> lps : [cmdChargePvSurplus]
      [*] --> lt : [cmdChargeTibber]
      [*] -right-> la : [cmdChargeAnyway]
    }

}
ccon -up-> nocl : carDisconnected
ccon -up-> xs : extStopped
ccon -up-> xs : fullyCharged

nocl -right-> cStop : carConnected
iact -down-> act : activate
act -up-> iact : deactivate

note "CarChargingManager" as N1

@enduml