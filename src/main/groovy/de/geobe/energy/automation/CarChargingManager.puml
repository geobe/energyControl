@startuml
'https://plantuml.com/state-diagram

scale 1400 width

[*] -down-> iact

state "Inactive" as iact
state "Active" as act {


    state "checkCar" as ccc <<choice>>
    [*] -right-> ccc : checkCar()

    act: entry: WallboxMonitor.subscribeState(this)
    act: exit: WallboxMonitor.unsubscribeState(this)

    state "NoCarConnected" as nocl {
'      nocl: entry: cancelCharging()
    }

    state "CarConnected" as cl {
'      cl: entry: getChargeStrategy()

      json ChargeStrategy {
        "ChargeStrategy": ["chargeStop", "chargePvSurplus", "chargeAnyway", "chargeTibber"]
      }

       state "selectStrategy" as sst <<choice>>
       [*] -right-> sst : checkStrategy()

      state "ChargePvSurplus" as lps {
        lps: entry: PvChargeStrategy.startStrategy(this)
        lps: exit: PvChargeStrategy.stopStrategy(this)

        state "HasSurplus" as has {
            has: entry: setCurrent(v)
            has: entry: startCharging()
            has: on: surplus(v) : setCurrent(v)
            has: exit: stopCharging()
        }

        state "NoSurplus" as nos {
          nos: on: noSurplus : ignore
        }

        state lpstart <<start>>
      }
      nos -down-> has : surplus(v)
      has -up-> nos : noSurplus
      lpstart -right-> nos

      state "ChargeTibber" as lt {
      lt: entry: startTibberMonitor
      lt: exit: stopTibberMonitor
      lt: on: tibberGo : startCharging()
      lt: on: tibberHalt : stopCharging()
      }

      state "ChargeAnyway" as la {
        la: entry: startCharging()
        la: entry: setCurrent(maxCurrent)
        la: exit:stopCharging()
      }

      state "ChargingStopped" as ls {
        ls: entry: stopCharging()
      }

      state "FullyCharged" as fc
      fc: entry: stopCharging()

      cl --> sst : chargeStrategyChanged : checkStrategy()
      sst --> lps : [chargePvSurplus]
      sst --> ls : [chargeStop]
      sst --> lt : [chargeTibber]
      sst --> la : [chargeAnyway]
      lps --> fc : [fullyCharged]
      lt --> fc : [fullyCharged]
      la --> fc : [fullyCharged]
    }

}
ccc --> nocl : [noCar]
ccc --> cl : [isCar]
cl -up-> nocl : carDisconnected

nocl -down-> cl : carConnected
iact -down-> act : activate
act -up-> iact : deactivate
'act --> ccc : carChange

note "CarChargingManager" as N1

@enduml